openapi: 3.0.3
info:
  title: Event Scheduler API
  version: 1.0.0
  description: |
    The Event Scheduler API allows clients to manage recurring schedules and their events.
servers:
  - url: http://localhost:8080
    description: Local development server
security:
  - ApiKeyAuth: []

tags:
  - name: Schedules
    description: Endpoints for managing schedules (user level)
  - name: Events
    description: Endpoints for retrieving events (user level)

paths:
  /api/schedules:
    post:
      summary: Create a new schedule
      description: Create a new recurring schedule.
      tags: [Schedules]
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleCreateRequest'
      responses:
        '201':
          description: Schedule created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: The unique ID of the created schedule.
                    example: "schedule123"
        '400':
          description: Invalid request body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/schedules/{id}:
    put:
      summary: Update an existing schedule
      description: Update the details of a specific schedule.
      tags: [Schedules]
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: id
          description: The ID of the schedule to update.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Fields to update in the schedule.
              properties:
                name:
                  type: string
                  example: "Updated Backup"
                rrule:
                  type: string
                  example: "FREQ=WEEKLY;INTERVAL=1"
                callback_url:
                  type: string
                  example: "https://example.com/updated-callback"
      responses:
        '200':
          description: Schedule updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Schedule updated successfully."
        '400':
          description: Invalid request body or missing schedule ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Schedule not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete a schedule and its events
      description: Delete a schedule and all events associated with it.
      tags: [Schedules]
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: id
          description: The ID of the schedule to delete.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Schedule and events deleted successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Schedule and associated events deleted successfully."
        '400':
          description: Missing or invalid schedule ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Schedule not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/schedules/{id}/events/pending:
    get:
      summary: Get pending events for a schedule
      description: Retrieve all pending events for a given schedule ID with pagination.
      tags: [Events]
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: id
          description: The ID of the schedule for which to retrieve pending events.
          required: true
          schema:
            type: string
        - in: query
          name: page
          description: The page number for pagination.
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          description: The number of items per page.
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Pending events retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  events:
                    type: array
                    items:
                      $ref: '#/components/schemas/Event'
                  page:
                    type: integer
                    example: 1
                  limit:
                    type: integer
                    example: 10
        '400':
          description: Missing schedule ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/schedules/{id}/events/history:
    get:
      summary: Get archived events for a schedule
      description: Retrieve all archived events for a given schedule ID with pagination.
      tags: [Events]
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: id
          description: The ID of the schedule for which to retrieve archived events.
          required: true
          schema:
            type: string
        - in: query
          name: page
          description: The page number for pagination.
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          description: The number of items per page.
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Archived events retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  events:
                    type: array
                    items:
                      $ref: '#/components/schemas/Event'
                  page:
                    type: integer
                    example: 1
                  limit:
                    type: integer
                    example: 10
        '400':
          description: Missing schedule ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY

  schemas:
    Schedule:
      type: object
      properties:
        _id:
          type: string
          description: Unique ID of the schedule.
          example: "schedule123"
        name:
          type: string
          description: Human-readable name for the schedule.
          example: "Daily Backup"
        rrule:
          type: string
          description: Recurrence rule for the event (RFC 5545 format).
          example: "FREQ=DAILY;INTERVAL=1"
        callback_url:
          type: string
          description: The URL to call when the event is triggered.
          example: "https://example.com/callback"
        created_at:
          type: string
          format: date-time
          description: Timestamp when the schedule was created.
          example: "2024-12-18T10:00:00Z"

    ScheduleCreateRequest:
      type: object
      required: [name, rrule, callback_url]
      properties:
        name:
          type: string
          example: "Daily Backup"
        rrule:
          type: string
          example: "FREQ=DAILY;INTERVAL=1"
        callback_url:
          type: string
          example: "https://example.com/callback"

    Event:
      type: object
      properties:
        _id:
          type: string
          description: Unique ID of the event.
          example: "event456"
        schedule_id:
          type: string
          description: ID of the related schedule.
          example: "schedule123"
        run_time:
          type: string
          format: date-time
          description: Exact time the event should be executed.
          example: "2024-12-18T12:00:00Z"
        status:
          type: array
          description: Array of status entries for the event.
          items:
            $ref: '#/components/schemas/StatusEntry'
        created_at:
          type: string
          format: date-time
          description: Timestamp when the event was created.
          example: "2024-12-18T10:00:00Z"

    StatusEntry:
      type: object
      properties:
        time:
          type: string
          format: date-time
          description: Timestamp of the status update.
          example: "2024-12-18T10:05:00Z"
        status:
          type: string
          description: Status value of the event.
          example: "ready_queue"
        message:
          type: string
          description: Additional information about the status update.
          example: "Event pre-queued for ready queue"

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: A descriptive error message.
          example: "Invalid request body."